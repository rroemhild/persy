diff --git a/configure b/configure
index 6a53be1..f180874 100755
--- a/configure
+++ b/configure
@@ -22,56 +22,6 @@ for langdir in `ls -d usr/lib/persy/locale/*/`; do
 done
 echo -e ""
 
-#app tests
-apps="python git xterm"
-for app in $apps; do
-    echo -n "Checking for $app... "
-    if [ -z `which $app 2> /dev/null` ]; then
-        echo -e "no"
-        exit 1
-    else
-        echo -e "yes"
-    fi
-done
-
-#python module tests
-pymods="gettext getpass platform paramiko subprocess pynotify pyinotify gtk gtk.glade pygtk webbrowser configobj"
-failedpymods=""
-for pymod in $pymods; do
-    echo -n "Checking for python module $pymod... "
-    python -c "import $pymod" 2> /dev/null
-    retval=$?
-    if [ "$retval" -eq "0" ]; then
-        echo "yes"
-    else
-        echo "no"
-        failedpymods="$failedpymods $pymod"
-    fi
-done
-
-if [ "$failedpymods" != "" ]; then
-    echo -e "\nMissing python modules:$failedpymods"
-    echo "Exit."
-    exit 1
-fi
-
-#check if gitk or qgit is installed
-guis="qgit gitk"
-for gui in $guis; do
-    echo -n "Checking for $gui... "
-    if [ -z `which $gui 2> /dev/null` ]; then
-        echo -e "no"
-        failedguis="$failedguis $gui"
-    else
-        echo -e "yes"
-    fi
-done
-
-if [ "$failedguis" = "$guis" ]; then
-    echo -e "neither qgit nor gitk is installed"
-    exit 1
-fi
-
 #Start Makefile
 echo -e "LANGS=$langs" >> Makefile
 echo -e "SHELL=`which sh`" >> Makefile
diff --git a/usr/lib/persy/persy.py b/usr/lib/persy/persy.py
index 178f819..17e0a9b 100755
--- a/usr/lib/persy/persy.py
+++ b/usr/lib/persy/persy.py
@@ -140,7 +140,8 @@ def main(argv):
 		config.write()
 
 
-	core = Core(config, log)
+	core = Core()
+	core.init(config, log)
 
 
 	#check if a local repository is initialized:
diff --git a/usr/lib/persy/persy_core.py b/usr/lib/persy/persy_core.py
index 8f66423..27f50b0 100644
--- a/usr/lib/persy/persy_core.py
+++ b/usr/lib/persy/persy_core.py
@@ -61,7 +61,7 @@ class _Core():
 	the core functionaliy for persy
 	"""
 
-	def __init__(self, config, log):
+	def init(self, config, log):
 		"""
 		initializes the git binding
 		"""
