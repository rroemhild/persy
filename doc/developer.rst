Developer Documentation
=================================
This is an overview what you might want to know if you want to hack and contribute to persy.

Contributing
---------------------------------
If you want to contribute in anyway, please go to github_ or launchpad_.

persy-dev Package
________________________________
If you want to Test your code or release it, you might want to take a look at the persy-dev package.
It can be found at github (http://github.com/kinkerl/persy-dev) and stores all the files which are not a direct part of the persy application (this includes artwork).


Dependencies
--------------------------------

At runtime you need the following packages (these names are taken from ubuntu and might differ on other distributions):

 *   git-core - git!
 *   gitk or qgit - graphical git browser
 *   xterm - used for log
 *   librsvg2-common - important for svg graphics
 *   python-gtk2 - the gui framework
 *   python-glade2 - creates the gui
 *   python-notify - notifications
 *   python-pyinotify - to get efficient information about filesystem changes
 *   python-paramiko - ssh library to initialize a remote server
 *   python-configobj - configlib

For some actions in the Makefile you also need:

 *   python-sphinx - build the documentation
 *   pandoc - build the manpage



Styleguide
---------------------------------
This is not really a guide, just some random guidelines and these are far from complete.
I will add new stuff when needed. 

Bye the way, a good guide is writte by google: http://google-styleguide.googlecode.com/svn/trunk/pyguide.html

docstrings
_________________________________

If you write code (module, class or function), please document it with docstrings. 
persy uses Sphinx to convert the docstrings into a complete code documentation (like this one).

Here is an example for a docstring:

.. code-block:: python
  :linenos:

   def public_fn_with_googley_docstring(name, state=None):
       """This function does something.

       Args:
          name (str):  The name to use.

       Kwargs:
          state (bool): Current state to be in.

       Returns:
          int.  The return code::

             0 -- Success!
             1 -- No good.
             2 -- Try again.

       Raises:
          AttributeError, KeyError

       A really great idea.  A way you might use me is

       >>> print public_fn_with_googley_docstring(name='foo', state=None)
       0

       BTW, this always returns 0.  **NEVER** use with :class:`MyPublicClass`.

       """
       return 0



publishing
__________________________________

Before publishing anything, make a quick check if everything is ok:
 1)   run persy
 2)   run the tests, you need the persy-dev package for this

    .. code-block:: bash
      :linenos:

      ./makerelease.sh test

 3)   create a debian package, you also need the persy-dev package for this
 
    .. code-block:: bash
      :linenos:

      ./makerelease.sh makedeb


naming
________________________________
How you should name your functions and stuff. This is taken from the google styleguide above:

module_name, package_name, ClassName, method_name, ExceptionName, function_name, GLOBAL_VAR_NAME, instance_var_name, function_parameter_name, local_var_name.  

.. note::

   i know not every function in persy confirms to this guideline... this should change!

Code Documentation
---------------------------------
Right now, this is just the autogenerated source code documentation. 
This will improve in the future but is not the first task on the todo list.

Core
_________________________________

.. automodule:: persy_core
   :members: Core, _Core 

PersyConfig
_________________________________

.. automodule:: persy_config
   :members:


PersyGtk
_________________________________

.. automodule:: persy_gtk
   :members:

PersyHelper
_________________________________

.. automodule:: persy_helper
.. autoclass:: _PersyHelper
   :members:

PersySSH
_________________________________

.. automodule:: persy_ssh
.. autoclass:: PersySSH
   :members:

Synchronization Classes
_________________________________

.. automodule:: persy_syncer
   :members:

PersyTalker
_________________________________

.. automodule:: persy_talker
.. autoclass:: Talker
   :members:


PuG - the git binding
_________________________________

.. automodule:: pug
.. autoclass:: PuG
   :members:



.. _github: http://github.com/kinkerl/persy
.. _launchpad: https://launchpad.net/persy
